/*************************************************************************
************************    VisualVk_Textures    *************************
*************************************************************************/
#pragma once

#include "Images.h"

namespace Vk
{
	/*********************************************************************
	*************************    BaseTexture    **************************
	*********************************************************************/

	class BaseTexture : private Resource
	{

	public:

		BaseTexture();

		~BaseTexture();

	public:

		void Release() noexcept;


		std::vector<char> ReadImage(std::string Path, int & With, int & Height, int & Channels);



	protected:

		VkSampler			m_hSampler;

		VkImageLayout		m_eImageLayout;
	};

	/*********************************************************************
	**************************    Texture1D    ***************************
	*********************************************************************/

	class Texture1D : public BaseTexture
	{

	public:


	private:

		Image1D			m_Image1D;
	};

	/*********************************************************************
	************************    Texture1DArray    ************************
	*********************************************************************/

	class Texture1DArray : public BaseTexture
	{

	public:


	private:

		Image1DArray		m_Image1DArray;
	};

	/*********************************************************************
	**************************    Texture2D    ***************************
	*********************************************************************/

	class Texture2D : public BaseTexture
	{

	public:


	private:

		Image2D			m_Image2D;
	};

	/*********************************************************************
	************************    Texture2DArray    ************************
	*********************************************************************/

	class Texture2DArray : public BaseTexture
	{

	public:


	private:

		Image2DArray		m_Image2DArray;
	};

	/*********************************************************************
	*************************    TextureCube    **************************
	*********************************************************************/

	class TextureCube : public BaseTexture
	{

	public:


	private:

		ImageCube			m_ImageCube;
	};

	/*********************************************************************
	**************************    Texture3D    ***************************
	*********************************************************************/

	class Texture3D : public BaseTexture
	{

	public:

	private:

		Image3D			m_Image3D;
	};
}